name: Build and Release

on:
  push:
    tags:
      - 'v*' # Triggers on version tags (e.g., v1.0.0, v1.2.3)
  workflow_dispatch: # Allows manual triggering

permissions:
  contents: write # Required for creating releases
  id-token: write # Required for modern GitHub Actions

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build TypeScript
      run: npm run build
      
    - name: Run tests (if available)
      run: npm test || echo "No tests configured, skipping..."
      continue-on-error: true
      
    - name: Install DXT CLI
      run: npm install -g @anthropic-ai/dxt
      
    - name: Pack DXT extension
      run: npx @anthropic-ai/dxt pack
      
    - name: Get package info
      id: package
      run: |
        echo "name=$(node -p "require('./package.json').name")" >> $GITHUB_OUTPUT
        echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
        
    - name: Find DXT package
      id: dxt_package
      run: |
        # Find the generated .dxt file
        DXT_FILE=$(find . -name "*.dxt" -type f | head -n 1)
        if [ -z "$DXT_FILE" ]; then
          echo "Error: No .dxt file found"
          exit 1
        fi
        echo "file=$DXT_FILE" >> $GITHUB_OUTPUT
        echo "filename=$(basename $DXT_FILE)" >> $GITHUB_OUTPUT
        
    - name: Create build artifacts
      run: |
        # Create a release directory
        mkdir -p release
        
        # Copy built files
        cp -r dist/ release/
        cp package.json release/
        cp manifest.json release/
        cp README.md release/        
        
        # Copy DXT package
        cp ${{ steps.dxt_package.outputs.file }} release/
        
        # Create source archive
        zip -r release/${{ steps.package.outputs.name }}-${{ steps.package.outputs.version }}-source.zip \
          src/ \
          package.json \
          package-lock.json \
          tsconfig.json \
          manifest.json \
          README.md \
          --exclude="node_modules/*" \
          --exclude="dist/*" \
          --exclude="cache/*"
          
    - name: Create Release and Upload Assets
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        body: |
          ## Gandalf MCP Server ${{ github.ref_name }}
          
          Fantasy Football MCP Server for Sleeper API integration.
          
          ### ðŸ“¦ Downloads
          - **DXT Extension**: `${{ steps.dxt_package.outputs.filename }}` - Ready to install in Claude Desktop
          - **Source Code**: `${{ steps.package.outputs.name }}-${{ steps.package.outputs.version }}-source.zip` - Complete source code
          
          ### ðŸš€ Installation
          
          **Option 1: DXT Extension (Recommended)**
          1. Download the `.dxt` file from the assets below
          2. Follow [Claude Desktop MCP installation guide](https://docs.anthropic.com/en/docs/claude-code/mcp)
          
          **Option 2: Manual Installation**
          1. Download and extract the source code
          2. Run `npm install && npm run build`
          3. Configure in Claude Desktop settings
          
          ### ðŸ“‹ Features
          - Player search and analysis
          - League management and standings  
          - Roster analysis and recommendations
          - Draft tracking and available players
          - Historical data caching for performance
          - Trending player analysis
          
          ### ðŸ”§ Requirements
          - Node.js 18+
          - Claude Desktop with MCP support
        draft: false
        prerelease: false
        files: |
          ${{ steps.dxt_package.outputs.file }}
          release/${{ steps.package.outputs.name }}-${{ steps.package.outputs.version }}-source.zip
        
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts-${{ steps.package.outputs.version }}
        path: |
          dist/
          release/
          ${{ steps.dxt_package.outputs.file }}
        retention-days: 30

